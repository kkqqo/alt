<div class="row">
    <div class="col-md-2">

        <div class="box box-primary">
            <div class="box-body no-padding">
                {{tree|raw}}
            </div>
        </div>
    </div>

    <div class="col-md-10">

        <div id="div1">

            <div class="box box-primary">
                <div class="box-body">
                    <table class="table table-condensed table-hover table-bordered">
                        <thead>
                            <tr>
                                <th>Source</th>
                                <th v-for="lang in langs" v-text="lang">
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-if="file">
                                <td>
                                    <button @click.prevent="onClickTranAll" class="btn btn-xs btn-primary">Translate all</button>
                                </td>
                                <td v-for="lang in langs">
                                    <button @click.prevent="copyFromSource(lang)" class="btn btn-xs btn-primary">Copy from source</button>
                                    <button @click.prevent="onClickTranSource(lang)" class="btn btn-xs btn-primary">Tran from Source</button>

                                    <button v-if="lang=='zh_CN'" @click.prevent="onClickAllT2S()" class="btn btn-xs btn-primary">T2S</button>
                                    <button v-if="lang=='en_US'" @click.prevent="onClickAllT2E()" class="btn btn-xs btn-primary">T2E</button>
                                    <button v-if="lang=='zh_HK'" @click.prevent="onClickAllE2T()" class="btn btn-xs btn-primary">E2T</button>
                                    <button @click="saveTran(lang)" class="btn btn-xs btn-success">
                                        <i class="fa fa-save"></i> Save</button>
                                </td>
                            </tr>
                            <tr v-for="d in renderData">

                                <td v-if="d.edit" :colspan="langs.length + 1">
                                    
                                    <textarea v-model="selected_data.msgstr[selected_lang]" class="form-control" style="height:500px" :placeholder="selected_lang"></textarea>
                                    <button @click="onClickTran(selected_data,selected_lang)" class="btn btn-xs btn-success">Source</button>
                                    <button v-if="selected_lang=='zh_CN'" @click.prevent="onClickT2S(selected_data)" class="btn btn-xs btn-success">T2S</button>
                                    <button v-if="selected_lang=='en_US'" @click.prevent="onClickT2E(selected_data)" class="btn btn-xs btn-success">T2E</button>
                                    <button v-if="selected_lang=='zh_HK'" @click.prevent="onClickE2T(selected_data)" class="btn btn-xs btn-success">E2T</button>
                                </td>

                                <td v-if="!d.edit" style="width:100px" v-text="d.msgid"></td>

                                <td style="cursor:pointer;" v-if="!d.edit" v-for="lang in langs" @click="clickData(d,lang)" :class="{active: ((selected_data==d) && (lang==selected_lang)) }">
                                    <div style="text-overflow:ellipsis;overflow-y:auto;max-height:100px" v-text="d.msgstr[lang]" >
                                        
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <div class="box-footer" v-if="file">
                    <button @click.prevent="saveTran()" class="btn btn-success">Save all</button>
                </div>
            </div>


            <div class="box box-primary" v-if="unuse">
                <div class="box-header">
                    <div class="box-title">
                        Unuse
                    </div>
                </div>
                <div class="box-body">
                    <table class="table table-condensed table-hover" v-for="lang in langs">
                        <thead>
                            <tr>
                                <th v-text="lang"></th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="d in unuse[lang]">
                                <td>
                                    <table class="table table-condensed table-hover">
                                        <thead>
                                            <tr>
                                                <th>msgid</th>
                                                <th>msgstr</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr v-for="(msgid,i) in d.msgid">
                                                <td v-text="msgid"></td>
                                                <td v-text="d.msgstr[i]"></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>

        </div>
    </div>
</div>


{% verbatim %}

<script>
    var vm = new Vue({
        el: "#div1",
        data: {
            file: null,
            langs: [],
            data: [],
            unuse: null,
            selected_data: null,
            selected_lang: null
        }, created() {
            this.$http.get("System/front_translate_twig/getLang").then((resp) => {
                this.langs = resp.body;
            });
        },computed:{
            renderData(){
                var ds=[];
                this.data.forEach((d)=>{
                    ds.push(d);
                    if(this.selected_data == d){
                        var a=JSON.parse(JSON.stringify(d));
                        a.edit=true;
                        ds.push(a);
                    }
                });
                return ds;
            }
        }, methods: {
            copyFromSource(lang) {
                this.data.forEach((d) => {
                    d.msgstr[lang] = d.msgid;
                });
            },
            onClickAllE2T() {
                this.data.forEach(this.onClickE2T);
            },
            onClickAllT2E() {
                this.data.forEach(this.onClickT2E);
            },
            onClickAllT2S() {
                this.data.forEach(this.onClickT2S);
            },
            onClickT2E(d) {
                this.$http.post("System/front_translate_twig/googleTranslate", {
                    from: "zh-TW",
                    to: "en",
                    text: d.msgstr.zh_HK
                }).then(function (r) {
                    d.msgstr.en_US = r.data.text;
                });
            },
            onClickT2S(d) {
                this.$http.post("System/front_translate_twig/t2s", {
                    str: d.msgstr.zh_HK
                }).then(function (r) {
                    d.msgstr.zh_CN = r.data.text;
                });
            },
            onClickE2T(d) {
                this.$http.post("System/front_translate_twig/googleTranslate", {
                    from: "en",
                    to: "zh-TW",
                    text: d.msgstr.en_US,
                }).then(function (r) {
                    d.msgstr.zh_HK = r.data.text;
                });
            },
            onClickTranLang(from, to) {
                this.$http.post("System/front_translate_twig/googleTranslate", {
                    from: from,
                    to: "zh-TW",
                    text: d.msgstr.en_US,
                }).then(function (r) {
                    d.msgstr.zh_HK = r.data.text;
                });
            },
            onClickTranAll() {
                this.langs.forEach((lang) => {
                    this.data.forEach((d) => {
                        this.$http.post("System/front_translate_twig/googleTranslate", {
                            from: 'auto',
                            to: lang,
                            text: d.msgid,
                        }).then(function (r) {
                            d.msgstr[lang] = r.data.text;
                        });

                    });
                });
            },
            saveTran(lang) {
                if (confirm("Save?")) {
                    this.$http.post("System/front_translate_twig", {
                        file: this.file,
                        data: this.data,
                        lang: this.lang
                    }).then(function (data) {
                        this.selected_data = null;
                    });
                }

            },
            onClickSave() {

            },
            selectFile(file) {
                this.file = file;
                this.$http.get("System/front_translate_twig/getTran", {
                    params: {
                        file: file
                    }
                }).then(function (resp) {
                    //console.log(resp);
                    this.data = resp.body.data;
                    this.unuse = resp.body.unuse;

                });
            }, clickData(d, lang) {
                this.selected_data = d;
                this.selected_lang = lang;
            }, onClickTranSource(lang) {
                if (confirm("Are you sure want to translation from source to " + lang)) {
                    this.data.forEach((d) => {
                        this.$http.post("System/front_translate_twig/googleTranslate", {
                            from: 'auto',
                            to: lang,
                            text: d.msgid,
                        }).then((resp) => {
                            d.msgstr[lang] = resp.data.text;
                        });
                    });
                }
            }, onClickTran(d, lang) {
                this.$http.post("System/front_translate_twig/googleTranslate", {
                    from: 'auto',
                    to: lang,
                    text: d.msgid,
                }).then(function (r) {
                    d.msgstr[lang] = r.data.text;
                });
            }
        }

    });

    function onClickFile(file) {
        vm.selectFile(file);
    }
    /*
    var app = angular.module('twig', []).controller('TwigController', function ($scope, $http) {
        console.log("angular start");

        $scope.langs = [];
        $scope.data = [];
        $scope.file = "";
        $scope.unuse = [];
        $scope.microsoft_access_token = "";

        $http.get("System/front_translate_twig/getLang").then(function (r) {
            $scope.langs = r.data;
        });

        $http.get("System/front_translate_twig/getMicrosoftAccessToken").then(function (r) {
            $scope.microsoft_access_token = r.data;
        });

        $scope.onClickTran = function (d, lang) {
            $http.post("System/front_translate_twig/googleTranslate", {
                from: 'auto',
                to: lang,
                text: d.msgid,
            }).then(function (r) {
                d.msgstr[lang] = r.data.text;
            });
        };

        $scope.onClickE2T = function (d) {
            $http.post("System/front_translate_twig/googleTranslate", {
                from: "en",
                to: "zh-TW",
                text: d.msgstr.en_US,
            }).then(function (r) {
                d.msgstr.zh_HK = r.data.text;
            });


        };

        $scope.onClickTC2EN = function (d) {
            $http.post("System/front_translate_twig/googleTranslate", {
                from: "zh-TW",
                to: "en",
                text: d.msgstr.zh_HK
            }).then(function (r) {
                d.msgstr.en_US = r.data.text;
            });
        };


        $scope.onClickT2S = function (d) {
            $http.post("System/front_translate_twig/t2s", {
                str: d.msgstr.zh_HK
            }).then(function (r) {
                d.msgstr.zh_CN = r.data.text;

            });
        };

        $scope.onClickAllT2S = function () {
            $scope.data.forEach($scope.onClickT2S);
        };

        $scope.onClickAllT2E = function () {
            $scope.data.forEach($scope.onClickTC2EN);
        };

        $scope.onClickAllE2T = function () {
            $scope.data.forEach($scope.onClickE2T);
        };

        $scope.onClickFile = function (file) {
            $scope.file = file;
            var param = $.param({
                file: file
            });
            $http.get("System/front_translate_twig/getTran?" + param).then(function (r) {
                $scope.data = r.data.data;
                $scope.unuse = r.data.unuse;
                //console.log(data);
            });

        };

        $scope.onClickSave = function () {
            $http.post("System/front_translate_twig", {
                file: $scope.file,
                data: $scope.data
            }).then(function (data) {
                $scope.selected_data = null;
            });

        };

        $scope.onClickData = function (d) {
            $scope.selected_data = d;
        }

        $scope.onClickTranSource = function (lang) {
            $scope.data.forEach(function (d) {
                $http.post("System/front_translate_twig/googleTranslate", {
                    from: 'auto',
                    to: lang,
                    text: d.msgid,
                }).then(function (r) {
                    d.msgstr[lang] = r.data.text;
                })

            });
        };

        $scope.onClickTranAll = function () {
            $scope.langs.forEach(function (lang) {
                $scope.data.forEach(function (d) {
                    $http.post("System/front_translate_twig/googleTranslate", {
                        from: 'auto',
                        to: lang,
                        text: d.msgid,
                    }).then(function (r) {
                        d.msgstr[lang] = r.data.text;
                    })

                });
            });
        };


    });

    angular.bootstrap($("#twig"), ['twig']);

    function onClickFile(file) {
        $("#twig").data().$scope.onClickFile(file);
    }
    */

</script> {% endverbatim %}